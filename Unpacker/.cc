//
// File generated by rootcint at Wed Oct 11 09:07:21 2006.
// Do NOT change. Changes will be lost next time file is generated
//

#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;


#include ".h"
#ifndef G__ROOT
#define G__ROOT
#endif



namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void HldSubEvent_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *HldSubEvent_IsA(const void*);
   static void *new_HldSubEvent(void *p = 0);
   static void *newArray_HldSubEvent(Long_t size);
   static void delete_HldSubEvent(void *p);
   static void deleteArray_HldSubEvent(void *p);
   static void destruct_HldSubEvent(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::HldSubEvent*)
   {
      ::HldSubEvent *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("HldSubEvent", ::HldSubEvent::Class_Version(), "hldsubevent_wk.h", 18,
                  typeid(::HldSubEvent), DefineBehavior(ptr, ptr),
                  &::HldSubEvent::Dictionary, &HldSubEvent_IsA, 0,
                  sizeof(::HldSubEvent) );
      instance.SetNew(&new_HldSubEvent);
      instance.SetNewArray(&newArray_HldSubEvent);
      instance.SetDelete(&delete_HldSubEvent);
      instance.SetDeleteArray(&deleteArray_HldSubEvent);
      instance.SetDestructor(&destruct_HldSubEvent);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::HldSubEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void HldEvent_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *HldEvent_IsA(const void*);
   static void *new_HldEvent(void *p = 0);
   static void *newArray_HldEvent(Long_t size);
   static void delete_HldEvent(void *p);
   static void deleteArray_HldEvent(void *p);
   static void destruct_HldEvent(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::HldEvent*)
   {
      ::HldEvent *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("HldEvent", ::HldEvent::Class_Version(), "hldevent_wk.h", 28,
                  typeid(::HldEvent), DefineBehavior(ptr, ptr),
                  &::HldEvent::Dictionary, &HldEvent_IsA, 0,
                  sizeof(::HldEvent) );
      instance.SetNew(&new_HldEvent);
      instance.SetNewArray(&newArray_HldEvent);
      instance.SetDelete(&delete_HldEvent);
      instance.SetDeleteArray(&deleteArray_HldEvent);
      instance.SetDestructor(&destruct_HldEvent);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::HldEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void Unpacker_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *Unpacker_IsA(const void*);
   static void *new_Unpacker(void *p = 0);
   static void *newArray_Unpacker(Long_t size);
   static void delete_Unpacker(void *p);
   static void deleteArray_Unpacker(void *p);
   static void destruct_Unpacker(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::Unpacker*)
   {
      ::Unpacker *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("Unpacker", ::Unpacker::Class_Version(), "unpacker_wk.h", 18,
                  typeid(::Unpacker), DefineBehavior(ptr, ptr),
                  &::Unpacker::Dictionary, &Unpacker_IsA, 0,
                  sizeof(::Unpacker) );
      instance.SetNew(&new_Unpacker);
      instance.SetNewArray(&newArray_Unpacker);
      instance.SetDelete(&delete_Unpacker);
      instance.SetDeleteArray(&deleteArray_Unpacker);
      instance.SetDestructor(&destruct_Unpacker);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::Unpacker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void Event_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *Event_IsA(const void*);
   static void *new_Event(void *p = 0);
   static void *newArray_Event(Long_t size);
   static void delete_Event(void *p);
   static void deleteArray_Event(void *p);
   static void destruct_Event(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::Event*)
   {
      ::Event *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("Event", ::Event::Class_Version(), "event_wk.h", 20,
                  typeid(::Event), DefineBehavior(ptr, ptr),
                  &::Event::Dictionary, &Event_IsA, 0,
                  sizeof(::Event) );
      instance.SetNew(&new_Event);
      instance.SetNewArray(&newArray_Event);
      instance.SetDelete(&delete_Event);
      instance.SetDeleteArray(&deleteArray_Event);
      instance.SetDestructor(&destruct_Event);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *HldSubEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HldSubEvent::Class_Name()
{
   return "HldSubEvent";
}

//______________________________________________________________________________
const char *HldSubEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::HldSubEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HldSubEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::HldSubEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HldSubEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::HldSubEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HldSubEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::HldSubEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *HldEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HldEvent::Class_Name()
{
   return "HldEvent";
}

//______________________________________________________________________________
const char *HldEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::HldEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HldEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::HldEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HldEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::HldEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HldEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::HldEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Unpacker::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Unpacker::Class_Name()
{
   return "Unpacker";
}

//______________________________________________________________________________
const char *Unpacker::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::Unpacker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Unpacker::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::Unpacker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Unpacker::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::Unpacker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Unpacker::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::Unpacker*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Event::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Event::Class_Name()
{
   return "Event";
}

//______________________________________________________________________________
const char *Event::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Event::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Event::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Event::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::Event*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Unpacker::Streamer(TBuffer &R__b)
{
   // Stream an object of class Unpacker.

   ::Error("Unpacker::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void Unpacker::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class Unpacker.

      TClass *R__cl = ::Unpacker::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*pEvent", &pEvent);
      R__insp.Inspect(R__cl, R__parent, "fEventNr", &fEventNr);
      R__insp.Inspect(R__cl, R__parent, "fEventLimit", &fEventLimit);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *Unpacker_IsA(const void *obj) {
      return ((::Unpacker*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_Unpacker(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Unpacker : new ::Unpacker;
   }
   static void *newArray_Unpacker(Long_t size) {
      return new ::Unpacker[size];
   }
   // Wrapper around operator delete
   static void delete_Unpacker(void *p) {
      delete ((::Unpacker*)p);
   }
   static void deleteArray_Unpacker(void *p) {
      delete [] ((::Unpacker*)p);
   }
   static void destruct_Unpacker(void *p) {
      typedef ::Unpacker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Unpacker

//______________________________________________________________________________
void HldEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class HldEvent.

   ::Error("HldEvent::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void HldEvent::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class HldEvent.

      TClass *R__cl = ::HldEvent::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*file", &file);
      R__insp.Inspect(R__cl, R__parent, "status", (void*)&status);
      ::ROOT::GenericShowMembers("HldEvent::stat", (void*)&status, R__insp, strcat(R__parent,"status."),true);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "isWritable", &isWritable);
      R__insp.Inspect(R__cl, R__parent, "hdr", (void*)&hdr);
      ::ROOT::GenericShowMembers("HldEvent::EvtHdr", (void*)&hdr, R__insp, strcat(R__parent,"hdr."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*pHdr", &pHdr);
      R__insp.Inspect(R__cl, R__parent, "*pData", &pData);
      R__insp.Inspect(R__cl, R__parent, "lastSubEvtIdx", &lastSubEvtIdx);
      R__insp.Inspect(R__cl, R__parent, "subEvtTable[100]", subEvtTable);
      R__insp.Inspect(R__cl, R__parent, "subEvt[100]", subEvt);
      R__insp.Inspect(R__cl, R__parent, "*pSubEvt", &pSubEvt);
      R__insp.Inspect(R__cl, R__parent, "subEvtId", &subEvtId);
      R__insp.Inspect(R__cl, R__parent, "trbLeadingTime[128][10]", trbLeadingTime);
      R__insp.Inspect(R__cl, R__parent, "trbTrailingTime[128][10]", trbTrailingTime);
      R__insp.Inspect(R__cl, R__parent, "trbADC[128][10]", trbADC);
      R__insp.Inspect(R__cl, R__parent, "trbLeadingMult[128]", trbLeadingMult);
      R__insp.Inspect(R__cl, R__parent, "trbTrailingMult[128]", trbTrailingMult);
      R__insp.Inspect(R__cl, R__parent, "errors_per_event", &errors_per_event);
      R__insp.Inspect(R__cl, R__parent, "debugFlag", &debugFlag);
      R__insp.Inspect(R__cl, R__parent, "debugFlag1", &debugFlag1);
      R__insp.Inspect(R__cl, R__parent, "quietMode", &quietMode);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *HldEvent_IsA(const void *obj) {
      return ((::HldEvent*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_HldEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HldEvent : new ::HldEvent;
   }
   static void *newArray_HldEvent(Long_t size) {
      return new ::HldEvent[size];
   }
   // Wrapper around operator delete
   static void delete_HldEvent(void *p) {
      delete ((::HldEvent*)p);
   }
   static void deleteArray_HldEvent(void *p) {
      delete [] ((::HldEvent*)p);
   }
   static void destruct_HldEvent(void *p) {
      typedef ::HldEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HldEvent

//______________________________________________________________________________
void HldSubEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class HldSubEvent.

   ::Error("HldSubEvent::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void HldSubEvent::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class HldSubEvent.

      TClass *R__cl = ::HldSubEvent::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "swapped", &swapped);
      R__insp.Inspect(R__cl, R__parent, "*pHdr", &pHdr);
      R__insp.Inspect(R__cl, R__parent, "*pData", &pData);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *HldSubEvent_IsA(const void *obj) {
      return ((::HldSubEvent*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_HldSubEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HldSubEvent : new ::HldSubEvent;
   }
   static void *newArray_HldSubEvent(Long_t size) {
      return new ::HldSubEvent[size];
   }
   // Wrapper around operator delete
   static void delete_HldSubEvent(void *p) {
      delete ((::HldSubEvent*)p);
   }
   static void deleteArray_HldSubEvent(void *p) {
      delete [] ((::HldSubEvent*)p);
   }
   static void destruct_HldSubEvent(void *p) {
      typedef ::HldSubEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HldSubEvent

//______________________________________________________________________________
void Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class Event.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> size;
      R__b >> decoding;
      R__b >> id;
      R__b >> seqNr;
      R__b >> date;
      R__b >> time;
      R__b >> year;
      R__b >> month;
      R__b >> day;
      R__b >> hour;
      R__b >> minute;
      R__b >> second;
      R__b >> runNr;
      R__b >> pad;
      R__b >> dataSize;
      R__b >> subEvtId;
      R__b.ReadStaticArray((int*)trbLeadingTime);
      R__b.ReadStaticArray((int*)trbTrailingTime);
      R__b.ReadStaticArray((int*)trbADC);
      R__b.ReadStaticArray((int*)trbLeadingMult);
      R__b.ReadStaticArray((int*)trbTrailingMult);
      R__b >> errors_per_event;
      R__b.CheckByteCount(R__s, R__c, Event::IsA());
   } else {
      R__c = R__b.WriteVersion(Event::IsA(), kTRUE);
      R__b << size;
      R__b << decoding;
      R__b << id;
      R__b << seqNr;
      R__b << date;
      R__b << time;
      R__b << year;
      R__b << month;
      R__b << day;
      R__b << hour;
      R__b << minute;
      R__b << second;
      R__b << runNr;
      R__b << pad;
      R__b << dataSize;
      R__b << subEvtId;
      R__b.WriteArray((int*)trbLeadingTime, 1280);
      R__b.WriteArray((int*)trbTrailingTime, 1280);
      R__b.WriteArray((int*)trbADC, 1280);
      R__b.WriteArray(trbLeadingMult, 128);
      R__b.WriteArray(trbTrailingMult, 128);
      R__b << errors_per_event;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Event::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class Event.

      TClass *R__cl = ::Event::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "size", &size);
      R__insp.Inspect(R__cl, R__parent, "decoding", &decoding);
      R__insp.Inspect(R__cl, R__parent, "id", &id);
      R__insp.Inspect(R__cl, R__parent, "seqNr", &seqNr);
      R__insp.Inspect(R__cl, R__parent, "date", &date);
      R__insp.Inspect(R__cl, R__parent, "time", &time);
      R__insp.Inspect(R__cl, R__parent, "year", &year);
      R__insp.Inspect(R__cl, R__parent, "month", &month);
      R__insp.Inspect(R__cl, R__parent, "day", &day);
      R__insp.Inspect(R__cl, R__parent, "hour", &hour);
      R__insp.Inspect(R__cl, R__parent, "minute", &minute);
      R__insp.Inspect(R__cl, R__parent, "second", &second);
      R__insp.Inspect(R__cl, R__parent, "runNr", &runNr);
      R__insp.Inspect(R__cl, R__parent, "pad", &pad);
      R__insp.Inspect(R__cl, R__parent, "dataSize", &dataSize);
      R__insp.Inspect(R__cl, R__parent, "subEvtId", &subEvtId);
      R__insp.Inspect(R__cl, R__parent, "trbLeadingTime[128][10]", trbLeadingTime);
      R__insp.Inspect(R__cl, R__parent, "trbTrailingTime[128][10]", trbTrailingTime);
      R__insp.Inspect(R__cl, R__parent, "trbADC[128][10]", trbADC);
      R__insp.Inspect(R__cl, R__parent, "trbLeadingMult[128]", trbLeadingMult);
      R__insp.Inspect(R__cl, R__parent, "trbTrailingMult[128]", trbTrailingMult);
      R__insp.Inspect(R__cl, R__parent, "errors_per_event", &errors_per_event);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *Event_IsA(const void *obj) {
      return ((::Event*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_Event(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Event : new ::Event;
   }
   static void *newArray_Event(Long_t size) {
      return new ::Event[size];
   }
   // Wrapper around operator delete
   static void delete_Event(void *p) {
      delete ((::Event*)p);
   }
   static void deleteArray_Event(void *p) {
      delete [] ((::Event*)p);
   }
   static void destruct_Event(void *p) {
      typedef ::Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Event

/********************************************************
* .cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtable();

extern "C" void G__set_cpp_environment() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("unpacker_wk.h");
  G__add_compiledheader("hldevent_wk.h");
  G__add_compiledheader("hldsubevent_wk.h");
  G__add_compiledheader("event_wk.h");
  G__cpp_reset_tagtable();
}
class G__dOcc_tag {};

void* operator new(size_t size,G__dOcc_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__dOcc_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_dOcc() { G__operator_delete(0); }

extern "C" int G__cpp_dllrev() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HldSubEvent */
static int G___148_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   HldSubEvent *p=NULL;
   if(G__getaryconstruct()) p=new HldSubEvent[G__getaryconstruct()];
   else p=::new((G__dOcc_tag*)G__getgvp()) HldSubEvent;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LN_HldSubEvent);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   HldSubEvent *p=NULL;
      p=::new((G__dOcc_tag*)G__getgvp()) HldSubEvent((UInt4*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LN_HldSubEvent);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldSubEvent*)(G__getstructoffset()))->getWordSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const HldSubEvent*)(G__getstructoffset()))->getTrigNr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const HldSubEvent*)(G__getstructoffset()))->getUnMaskedTrigNr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldSubEvent*)(G__getstructoffset()))->getDataLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((HldSubEvent*)(G__getstructoffset()))->swapData();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const HldSubEvent*)(G__getstructoffset()))->dumpIt((FILE*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const HldSubEvent*)(G__getstructoffset()))->dumpIt();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((HldSubEvent*)(G__getstructoffset()))->scanIt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldSubEvent*)(G__getstructoffset()))->getSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldSubEvent*)(G__getstructoffset()))->getId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldSubEvent*)(G__getstructoffset()))->getDecoding());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((HldSubEvent*)(G__getstructoffset()))->getErrorBit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,72,(long)((const HldSubEvent*)(G__getstructoffset()))->getHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,72,(long)((const HldSubEvent*)(G__getstructoffset()))->getData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldSubEvent*)(G__getstructoffset()))->getDataSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldSubEvent*)(G__getstructoffset()))->getPaddedSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,72,(long)((const HldSubEvent*)(G__getstructoffset()))->getEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,72,(long)((const HldSubEvent*)(G__getstructoffset()))->getPaddedEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)HldSubEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)HldSubEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)HldSubEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      HldSubEvent::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const HldSubEvent*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((HldSubEvent*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((HldSubEvent*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((HldSubEvent*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)HldSubEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)HldSubEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)HldSubEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___148_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)HldSubEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___148_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   HldSubEvent *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new HldSubEvent(*(HldSubEvent*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__LN_HldSubEvent);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HldSubEvent G__THldSubEvent;
static int G___148_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (HldSubEvent *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((HldSubEvent *)((G__getstructoffset())+sizeof(HldSubEvent)*i))->~G__THldSubEvent();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((HldSubEvent *)(G__getstructoffset()))->~G__THldSubEvent();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___148_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   HldSubEvent *dest = (HldSubEvent*)(G__getstructoffset());
   *dest = (*(HldSubEvent*)libp->para[0].ref);
   const HldSubEvent& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HldEvent */
static int G___150_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   HldEvent *p=NULL;
   if(G__getaryconstruct()) p=new HldEvent[G__getaryconstruct()];
   else p=::new((G__dOcc_tag*)G__getgvp()) HldEvent;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LN_HldEvent);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   HldEvent *p=NULL;
      p=::new((G__dOcc_tag*)G__getgvp()) HldEvent((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LN_HldEvent);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldEvent*)(G__getstructoffset()))->getHdrSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldEvent*)(G__getstructoffset()))->getSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldEvent*)(G__getstructoffset()))->getDecoding());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldEvent*)(G__getstructoffset()))->getId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldEvent*)(G__getstructoffset()))->getSeqNr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldEvent*)(G__getstructoffset()))->getDate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldEvent*)(G__getstructoffset()))->getTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const HldEvent*)(G__getstructoffset()))->getYear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const HldEvent*)(G__getstructoffset()))->getMonth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const HldEvent*)(G__getstructoffset()))->getDay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const HldEvent*)(G__getstructoffset()))->getHour());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const HldEvent*)(G__getstructoffset()))->getMinute());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const HldEvent*)(G__getstructoffset()))->getSecond());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldEvent*)(G__getstructoffset()))->getRunNr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldEvent*)(G__getstructoffset()))->getPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,72,(long)((const HldEvent*)(G__getstructoffset()))->getHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,72,(long)((const HldEvent*)(G__getstructoffset()))->getData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldEvent*)(G__getstructoffset()))->getDataSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const HldEvent*)(G__getstructoffset()))->getPaddedSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,72,(long)((const HldEvent*)(G__getstructoffset()))->getEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,72,(long)((const HldEvent*)(G__getstructoffset()))->getPaddedEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((HldEvent*)(G__getstructoffset()))->setWritable((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((HldEvent*)(G__getstructoffset()))->setWritable();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((HldEvent*)(G__getstructoffset()))->setFile((const Text_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((HldEvent*)(G__getstructoffset()))->readSubEvt((size_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((HldEvent*)(G__getstructoffset()))->read());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((HldEvent*)(G__getstructoffset()))->execute());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((HldEvent*)(G__getstructoffset()))->swap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((HldEvent*)(G__getstructoffset()))->setSubEvtId((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((HldEvent*)(G__getstructoffset()))->setSubEvtId();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((HldEvent*)(G__getstructoffset()))->appendSubEvtIdx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((HldEvent*)(G__getstructoffset()))->getpSubEvt());
   result7->obj.reftype.reftype=2;
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const HldEvent*)(G__getstructoffset()))->getSubEvtId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((HldEvent*)(G__getstructoffset()))->decode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((HldEvent*)(G__getstructoffset()))->correctOverflow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((HldEvent*)(G__getstructoffset()))->correctRefTimeCh31());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((HldEvent*)(G__getstructoffset()))->clearAll();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((HldEvent*)(G__getstructoffset()))->setQuietMode();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((HldEvent*)(G__getstructoffset()))->setDebugFlag((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((HldEvent*)(G__getstructoffset()))->setDebugFlag1((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((HldEvent*)(G__getstructoffset()))->incErrorNr();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((HldEvent*)(G__getstructoffset()))->PrintTdcError((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((HldEvent*)(G__getstructoffset()))->fill_trail((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((HldEvent*)(G__getstructoffset()))->fill_lead((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)HldEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)HldEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)HldEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      HldEvent::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const HldEvent*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((HldEvent*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((HldEvent*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((HldEvent*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)HldEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)HldEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)HldEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___150_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)HldEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___150_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   HldEvent *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new HldEvent(*(HldEvent*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__LN_HldEvent);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HldEvent G__THldEvent;
static int G___150_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (HldEvent *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((HldEvent *)((G__getstructoffset())+sizeof(HldEvent)*i))->~G__THldEvent();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((HldEvent *)(G__getstructoffset()))->~G__THldEvent();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___150_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   HldEvent *dest = (HldEvent*)(G__getstructoffset());
   *dest = (*(HldEvent*)libp->para[0].ref);
   const HldEvent& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Unpacker */
static int G___155_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Unpacker *p=NULL;
   if(G__getaryconstruct()) p=new Unpacker[G__getaryconstruct()];
   else p=::new((G__dOcc_tag*)G__getgvp()) Unpacker;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LN_Unpacker);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___155_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Unpacker *p=NULL;
      p=::new((G__dOcc_tag*)G__getgvp()) Unpacker((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LN_Unpacker);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___155_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,103,(long)((Unpacker*)(G__getstructoffset()))->eventLoop((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,103,(long)((Unpacker*)(G__getstructoffset()))->eventLoop((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,103,(long)((Unpacker*)(G__getstructoffset()))->eventLoop());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___155_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)Unpacker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___155_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)Unpacker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___155_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)Unpacker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___155_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      Unpacker::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___155_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const Unpacker*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___155_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Unpacker*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___155_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Unpacker*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___155_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Unpacker*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___155_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)Unpacker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___155_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)Unpacker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___155_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)Unpacker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___155_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)Unpacker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___155_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   Unpacker *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new Unpacker(*(Unpacker*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__LN_Unpacker);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Unpacker G__TUnpacker;
static int G___155_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (Unpacker *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((Unpacker *)((G__getstructoffset())+sizeof(Unpacker)*i))->~G__TUnpacker();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((Unpacker *)(G__getstructoffset()))->~G__TUnpacker();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___155_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Unpacker *dest = (Unpacker*)(G__getstructoffset());
   *dest = (*(Unpacker*)libp->para[0].ref);
   const Unpacker& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Event */
static int G___156_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Event *p=NULL;
   if(G__getaryconstruct()) p=new Event[G__getaryconstruct()];
   else p=::new((G__dOcc_tag*)G__getgvp()) Event;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LN_Event);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Event *p=NULL;
      p=::new((G__dOcc_tag*)G__getgvp()) Event(*(HldEvent*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LN_Event);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setSize((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setSize();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setDecoding((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setDecoding();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setId((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setId();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setSeqNr((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setSeqNr();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setDate((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setDate();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setTime((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setTime();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setRunNr((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setRunNr();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setPad((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setPad();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setSubEvtId((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setSubEvtId();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((Event*)(G__getstructoffset()))->fill(*(HldEvent*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->clearAll();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      Event::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const Event*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___156_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___156_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   Event *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new Event(*(Event*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__LN_Event);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Event G__TEvent;
static int G___156_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (Event *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((Event *)((G__getstructoffset())+sizeof(Event)*i))->~G__TEvent();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((Event *)(G__getstructoffset()))->~G__TEvent();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___156_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Event *dest = (Event*)(G__getstructoffset());
   *dest = (*(Event*)libp->para[0].ref);
   const Event& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HldSubEvent */

/* HldEvent */

/* Unpacker */

/* Event */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunc {
 public:
  G__Sizep2memfunc() {p=&G__Sizep2memfunc::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunc::*p)();
};

size_t G__get_sizep2memfunc()
{
  G__Sizep2memfunc a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritance() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetable() {

   /* Setting up typedef entry */
   G__search_typename2("size_t",104,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Text_t",99,-1,0,
-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"# 1 \"/tmp/WT7GLl_cint.cxx\"",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"# 1 \"/tmp/WT7GLl_cint.cxx\"",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"# 1 \"/tmp/WT7GLl_cint.cxx\"",0);
   G__search_typename2("UInt4",104,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("HPP",85,G__get_linked_tagnum(&G__LN_HldSubEvent),2,G__get_linked_tagnum(&G__LN_HldEvent));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HldSubEvent */
static void G__setup_memvarHldSubEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_HldSubEvent));
   { HldSubEvent *p; p=(HldSubEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"swapped=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,72,0,0,-1,G__defined_typename("UInt4"),-1,4,"pHdr=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,72,0,0,-1,G__defined_typename("UInt4"),-1,4,"pData=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HldEvent */
static void G__setup_memvarHldEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_HldEvent));
   { HldEvent *p; p=(HldEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),-1,4,"file=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__LN_HldEventcLcLstat),-1,-1,4,"status=",0,"! status struct of hld file");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isWritable=",0,"flag used for HLD output");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__LN_HldEventcLcLEvtHdr),-1,-1,2,"hdr=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,72,0,0,-1,G__defined_typename("UInt4"),-1,2,"pHdr=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,72,0,0,-1,G__defined_typename("UInt4"),-1,2,"pData=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("size_t"),-1,2,"lastSubEvtIdx=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,1,-1,G__defined_typename("size_t"),-2,2,"maxSubEvtIdx=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__LN_HldEventcLcLSubEvtTable),-1,-1,2,"subEvtTable[100]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,1,-1,G__defined_typename("size_t"),-2,2,"maxSubEvts=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__LN_HldSubEvent),-1,-1,2,"subEvt[100]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LN_HldSubEvent),-1,-1,2,"pSubEvt=",0,"! pointer to subevent where data are read from");
   G__memvar_setup((void*)((long)(&p->subEvtId)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"subEvtId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trbLeadingTime)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"trbLeadingTime[128][10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trbTrailingTime)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"trbTrailingTime[128][10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trbADC)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"trbADC[128][10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trbLeadingMult)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"trbLeadingMult[128]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trbTrailingMult)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"trbTrailingMult[128]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->errors_per_event)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"errors_per_event=",0,"number of errors per event");
   G__memvar_setup((void*)((long)(&p->debugFlag)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"debugFlag=",0,"allows to print subevent information");
   G__memvar_setup((void*)((long)(&p->debugFlag1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"debugFlag1=",0,"used for special purpuses");
   G__memvar_setup((void*)((long)(&p->quietMode)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"quietMode=",0,"! do not print errors!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Unpacker */
static void G__setup_memvarUnpacker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_Unpacker));
   { Unpacker *p; p=(Unpacker*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LN_HldEvent),-1,-1,2,"pEvent=",0,"Current event read from file");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEventNr=",0,"Event Counter");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEventLimit=",0,"Maximum event number per file ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Event */
static void G__setup_memvarEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_Event));
   { Event *p; p=(Event*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"size=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"decoding=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"seqNr=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"date=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"time=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"year=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"month=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"day=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"hour=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"minute=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"second=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"runNr=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"pad=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"dataSize=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"subEvtId=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trbLeadingTime[128][10]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trbTrailingTime[128][10]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trbADC[128][10]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trbLeadingMult[128]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trbTrailingMult[128]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"errors_per_event=",0,"number of errors per event");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvar() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHldSubEvent(void) {
   /* HldSubEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_HldSubEvent));
   G__memfunc_setup("HldSubEvent",1092,G___148_1_0,105,G__get_linked_tagnum(&G__LN_HldSubEvent),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HldSubEvent",1092,G___148_2_0,105,G__get_linked_tagnum(&G__LN_HldSubEvent),-1,0,1,1,1,0,"H - 'UInt4' 0 - p",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getWordSize",1143,G___148_3_0,104,-1,G__defined_typename("size_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getTrigNr",918,G___148_4_0,105,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getUnMaskedTrigNr",1710,G___148_5_0,105,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getDataLen",985,G___148_6_0,104,-1,G__defined_typename("size_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("swapData",821,G___148_7_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("dumpIt",627,G___148_8_0,121,-1,-1,0,1,1,1,8,"E - - 0 stderr output",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("scanIt",610,G___148_9_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getSize",731,G___148_0_1,104,-1,G__defined_typename("size_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getId",493,G___148_1_1,104,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getDecoding",1117,G___148_2_1,104,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getErrorBit",1129,G___148_3_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getHeader",905,G___148_4_1,72,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getData",698,G___148_5_1,72,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getDataSize",1109,G___148_6_1,104,-1,G__defined_typename("size_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getPaddedSize",1309,G___148_7_1,104,-1,G__defined_typename("size_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getEnd",599,G___148_8_1,72,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getPaddedEnd",1177,G___148_9_1,72,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("wasSwapped",1055,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("resetSwapFlag",1336,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getHdrLen",893,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("size_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getDataPaddedSize",1687,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("size_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("isSwapped",944,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("swapHdr",729,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("byte",436,(G__InterfaceMethod)NULL,105,-1,-1,0,2,1,4,8,
"i - - 0 - b h - 'UInt4' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("align8",579,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("size_t"),0,1,1,4,8,"h - 'size_t' 10 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("swap4",495,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,8,
"H - 'UInt_t' 0 - p h - 'size_t' 10 - len",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("swap2",493,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,8,
"R - 'UShort_t' 0 - p h - 'size_t' 10 - len",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getHdrSize",1017,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("size_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G___148_1_3,85,G__get_linked_tagnum(&G__LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&HldSubEvent::Class),0);
   G__memfunc_setup("Class_Name",982,G___148_2_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&HldSubEvent::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G___148_3_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&HldSubEvent::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G___148_4_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&HldSubEvent::Dictionary),0);
   G__memfunc_setup("IsA",253,G___148_5_3,85,G__get_linked_tagnum(&G__LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G___148_6_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G___148_7_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G___148_8_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G___148_9_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&HldSubEvent::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G___148_0_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&HldSubEvent::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G___148_1_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&HldSubEvent::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G___148_2_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&HldSubEvent::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("HldSubEvent",1092,G___148_3_4,(int)('i'),G__get_linked_tagnum(&G__LN_HldSubEvent),-1,0,1,1,1,0,"u 'HldSubEvent' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~HldSubEvent",1218,G___148_4_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G___148_5_4,(int)('u'),G__get_linked_tagnum(&G__LN_HldSubEvent),-1,1,1,1,1,0,"u 'HldSubEvent' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHldEvent(void) {
   /* HldEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_HldEvent));
   G__memfunc_setup("HldEvent",794,G___150_1_0,105,G__get_linked_tagnum(&G__LN_HldEvent),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HldEvent",794,G___150_2_0,105,G__get_linked_tagnum(&G__LN_HldEvent),-1,0,2,1,1,0,
"C - - 10 - name i - 'Int_t' 0 - subId",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getHdrSize",1017,G___150_3_0,104,-1,G__defined_typename("size_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getSize",731,G___150_4_0,104,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getDecoding",1117,G___150_5_0,104,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getId",493,G___150_6_0,104,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getSeqNr",809,G___150_7_0,104,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getDate",702,G___150_8_0,104,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getTime",719,G___150_9_0,104,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getYear",721,G___150_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getMonth",838,G___150_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getDay",606,G___150_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getHour",734,G___150_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getMinute",946,G___150_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getSecond",924,G___150_5_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getRunNr",821,G___150_6_1,104,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getPad",597,G___150_7_1,104,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getHeader",905,G___150_8_1,72,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getData",698,G___150_9_1,72,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getDataSize",1109,G___150_0_2,104,-1,G__defined_typename("size_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getPaddedSize",1309,G___150_1_2,104,-1,G__defined_typename("size_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getEnd",599,G___150_2_2,72,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getPaddedEnd",1177,G___150_3_2,72,-1,G__defined_typename("UInt4"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setWritable",1158,G___150_4_2,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setFile",716,G___150_5_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"C - 'Text_t' 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("readSubEvt",1013,G___150_6_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"h - 'size_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("read",412,G___150_7_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("execute",755,G___150_8_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("swap",443,G___150_9_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setSubEvtId",1106,G___150_0_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("appendSubEvtIdx",1526,G___150_1_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("init",436,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getHdrLen",893,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("size_t"),0,0,1,2,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getDataPaddedSize",1687,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("size_t"),0,0,1,2,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("isSwapped",944,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,2,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("swapHdr",729,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("byte",436,(G__InterfaceMethod)NULL,105,-1,-1,0,2,1,2,8,
"i - - 0 - b h - 'UInt4' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("align8",579,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("size_t"),0,1,1,2,8,"h - 'size_t' 10 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("swap4",495,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,8,
"H - 'UInt_t' 0 - p h - 'size_t' 10 - len",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("swap2",493,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,8,
"R - 'UShort_t' 0 - p h - 'size_t' 10 - len",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getDataLen",985,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("size_t"),0,0,1,2,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getpSubEvt",1033,G___150_2_4,85,G__get_linked_tagnum(&G__LN_HldSubEvent),G__defined_typename("HldEvent::HPP"),2,0,1,1,4,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getSubEvtId",1094,G___150_3_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("decode",612,G___150_4_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("correctOverflow",1606,G___150_5_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("correctRefTimeCh31",1709,G___150_6_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("clearAll",800,G___150_7_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setQuietMode",1241,G___150_8_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setDebugFlag",1197,G___150_9_4,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - db",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setDebugFlag1",1246,G___150_0_5,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - db",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("incErrorNr",1028,G___150_1_5,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PrintTdcError",1330,G___150_2_5,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - e",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("fill_trail",1058,G___150_3_5,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"i - 'Int_t' 0 - ch i - 'Int_t' 0 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("fill_lead",924,G___150_4_5,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"i - 'Int_t' 0 - ch i - 'Int_t' 0 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G___150_5_5,85,G__get_linked_tagnum(&G__LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&HldEvent::Class),0);
   G__memfunc_setup("Class_Name",982,G___150_6_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&HldEvent::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G___150_7_5,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&HldEvent::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G___150_8_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&HldEvent::Dictionary),0);
   G__memfunc_setup("IsA",253,G___150_9_5,85,G__get_linked_tagnum(&G__LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G___150_0_6,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G___150_1_6,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G___150_2_6,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G___150_3_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&HldEvent::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G___150_4_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&HldEvent::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G___150_5_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&HldEvent::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G___150_6_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&HldEvent::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("HldEvent",794,G___150_7_6,(int)('i'),G__get_linked_tagnum(&G__LN_HldEvent),-1,0,1,1,1,0,"u 'HldEvent' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~HldEvent",920,G___150_8_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G___150_9_6,(int)('u'),G__get_linked_tagnum(&G__LN_HldEvent),-1,1,1,1,1,0,"u 'HldEvent' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUnpacker(void) {
   /* Unpacker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_Unpacker));
   G__memfunc_setup("Unpacker",825,G___155_1_0,105,G__get_linked_tagnum(&G__LN_Unpacker),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Unpacker",825,G___155_2_0,105,G__get_linked_tagnum(&G__LN_Unpacker),-1,0,2,1,1,0,
"C - - 10 - name i - 'Int_t' 0 - subEvtId",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("eventLoop",956,G___155_3_0,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"i - 'Int_t' 0 50000 NbEvt i - 'Int_t' 0 0 startEvt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G___155_4_0,85,G__get_linked_tagnum(&G__LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&Unpacker::Class),0);
   G__memfunc_setup("Class_Name",982,G___155_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&Unpacker::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G___155_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&Unpacker::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G___155_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&Unpacker::Dictionary),0);
   G__memfunc_setup("IsA",253,G___155_8_0,85,G__get_linked_tagnum(&G__LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G___155_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G___155_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G___155_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G___155_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&Unpacker::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G___155_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&Unpacker::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G___155_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&Unpacker::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G___155_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&Unpacker::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("Unpacker",825,G___155_6_1,(int)('i'),G__get_linked_tagnum(&G__LN_Unpacker),-1,0,1,1,1,0,"u 'Unpacker' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~Unpacker",951,G___155_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G___155_8_1,(int)('u'),G__get_linked_tagnum(&G__LN_Unpacker),-1,1,1,1,1,0,"u 'Unpacker' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEvent(void) {
   /* Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_Event));
   G__memfunc_setup("Event",514,G___156_1_0,105,G__get_linked_tagnum(&G__LN_Event),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Event",514,G___156_2_0,105,G__get_linked_tagnum(&G__LN_Event),-1,0,1,1,1,0,"u 'HldEvent' - 11 - HldEvt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setSize",743,G___156_3_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setDecoding",1129,G___156_4_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setId",505,G___156_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setSeqNr",821,G___156_6_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 se",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setDate",714,G___156_7_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setTime",731,G___156_8_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 t",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setRunNr",833,G___156_9_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setPad",609,G___156_0_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 p",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setSubEvtId",1106,G___156_1_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 sb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("fill",423,G___156_2_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'HldEvent' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("clearAll",800,G___156_3_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G___156_4_1,85,G__get_linked_tagnum(&G__LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&Event::Class),0);
   G__memfunc_setup("Class_Name",982,G___156_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&Event::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G___156_6_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&Event::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G___156_7_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&Event::Dictionary),0);
   G__memfunc_setup("IsA",253,G___156_8_1,85,G__get_linked_tagnum(&G__LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G___156_9_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G___156_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G___156_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G___156_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&Event::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G___156_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&Event::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G___156_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&Event::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G___156_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&Event::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("Event",514,G___156_6_2,(int)('i'),G__get_linked_tagnum(&G__LN_Event),-1,0,1,1,1,0,"u 'Event' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~Event",640,G___156_7_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G___156_8_2,(int)('u'),G__get_linked_tagnum(&G__LN_Event),-1,1,1,1,1,0,"u 'Event' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunc() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

   G__memvar_setup((void*)(&gROOT),85,0,0,G__get_linked_tagnum(&G__LN_TROOT),-1,-1,1,"gROOT=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_global() {
  G__cpp_setup_global0();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_func() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__LN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__LN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__LN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__LN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LN_TROOT = { "TROOT" , 99 , -1 };
G__linked_taginfo G__LN_HldSubEvent = { "HldSubEvent" , 99 , -1 };
G__linked_taginfo G__LN_HldEvent = { "HldEvent" , 99 , -1 };
G__linked_taginfo G__LN_HldEventcLcLstat = { "HldEvent::stat" , 115 , -1 };
G__linked_taginfo G__LN_HldEventcLcLEvtHdr = { "HldEvent::EvtHdr" , 115 , -1 };
G__linked_taginfo G__LN_HldEventcLcLSubEvtTable = { "HldEvent::SubEvtTable" , 115 , -1 };
G__linked_taginfo G__LN_Unpacker = { "Unpacker" , 99 , -1 };
G__linked_taginfo G__LN_Event = { "Event" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtable() {
  G__LN_TClass.tagnum = -1 ;
  G__LN_TBuffer.tagnum = -1 ;
  G__LN_TMemberInspector.tagnum = -1 ;
  G__LN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LN_TROOT.tagnum = -1 ;
  G__LN_HldSubEvent.tagnum = -1 ;
  G__LN_HldEvent.tagnum = -1 ;
  G__LN_HldEventcLcLstat.tagnum = -1 ;
  G__LN_HldEventcLcLEvtHdr.tagnum = -1 ;
  G__LN_HldEventcLcLSubEvtTable.tagnum = -1 ;
  G__LN_Unpacker.tagnum = -1 ;
  G__LN_Event.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtable() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__LN_TClass);
   G__get_linked_tagnum(&G__LN_TBuffer);
   G__get_linked_tagnum(&G__LN_TMemberInspector);
   G__get_linked_tagnum(&G__LN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum(&G__LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__LN_TROOT);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_HldSubEvent),sizeof(HldSubEvent),-1,33024,(char*)NULL,G__setup_memvarHldSubEvent,G__setup_memfuncHldSubEvent);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_HldEvent),sizeof(HldEvent),-1,34048,"HADES LMD Event",G__setup_memvarHldEvent,G__setup_memfuncHldEvent);
   G__get_linked_tagnum(&G__LN_HldEventcLcLstat);
   G__get_linked_tagnum(&G__LN_HldEventcLcLEvtHdr);
   G__get_linked_tagnum(&G__LN_HldEventcLcLSubEvtTable);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_Unpacker),sizeof(Unpacker),-1,34048,(char*)NULL,G__setup_memvarUnpacker,G__setup_memfuncUnpacker);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_Event),sizeof(Event),-1,33024,(char*)NULL,G__setup_memvarEvent,G__setup_memfuncEvent);
}
extern "C" void G__cpp_setup(void) {
  G__check_setup_version(30051515,"G__cpp_setup()");
  G__set_cpp_environment();
  G__cpp_setup_tagtable();

  G__cpp_setup_inheritance();

  G__cpp_setup_typetable();

  G__cpp_setup_memvar();

  G__cpp_setup_memfunc();
  G__cpp_setup_global();
  G__cpp_setup_func();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunc();
  return;
}
class G__cpp_setup_init {
  public:
    G__cpp_setup_init() { G__add_setup_func("G__Default",(G__incsetup)(&G__cpp_setup)); }
   ~G__cpp_setup_init() { G__remove_setup_func("G__Default"); }
};
G__cpp_setup_init G__cpp_setup_initializer;

